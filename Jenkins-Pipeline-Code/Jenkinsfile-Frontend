pipeline {
    agent any 
    tools {
        nodejs 'nodejs'
    }
    environment  {
        SCANNER_HOME=tool 'sonar-scanner'
        AWS_ACCOUNT_ID = credentials('account-id')
        AWS_ECR_REPO_NAME = credentials('repo-name')
        AWS_DEFAULT_REGION = 'us-east-1'
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/"
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/aswanimamidi/3-tier-project.git'
            }
        }
        stage('Sonarqube Analysis') {
            steps {
                dir('Application-Code/frontend') {
                   withSonarQubeEnv('sonar-server') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner \
                                    -Dsonar.projectKey=jenkins \
                                     -Dsonar.sources=. \
                                     -Dsonar.host.url=http://3.86.201.108:9000 \
                                    -Dsonar.login=squ_ca8e90dae25fd17101b1d114322d9afe31539cc5 '''
                    }
                }
            }
        }
        stage('Quality Check') {
            steps {
               timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: false
            }
        }
    }
        stage('OWASP Dependency-Check Scan') {
            steps {
                dir('Application-Code/frontend') {
                    dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'dp-ckeck'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }
        stage('Trivy File Scan') {
            steps {
                dir('Application-Code/frontend') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }
        stage("Docker Image Build") {
            steps {
                script {
                    dir('Application-Code/frontend') {
                            sh 'docker system prune -f'
                            sh 'docker container prune -f'
                            sh 'docker build -t ${AWS_ECR_REPO_NAME} .'
                    }
                }
            }
        }
        stage("ECR Image Pushing") {
            steps {
                script {
                        sh 'aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI}'
                        sh 'docker tag ${AWS_ECR_REPO_NAME} ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}'
                        sh 'docker push ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}'
                }
            }
        }
        stage("TRIVY Image Scan") {
            steps {
                sh 'trivy image ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER} > trivyimage.txt' 
            }
        }
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/aswanimamidi/3-tier-project.git'
            }
        }
        stage('Update GitHub') {
           environment {
                GIT_REPO_NAME = "3-tier-project"
                GIT_USER_NAME = 'GIT_USERNAME'
            }
              
     stage('Update GitHub') {
            steps {
                dir('Kubernetes-Manifests-file/Frontend') {
                    withCredentials([string(credentialsId: 'git-token', variable: 'GIT_TOKEN')]) {
                     sh '''
                        git config --global user.email "aswanipaidi49@gmail.com"
                        git config --global user.name "aswanimamidi"
                        # Update the image version in deployment.yaml
                        sed -i 's#image:.*#image: ****.dkr.ecr.us-east-1.amazonaws.com/****:14#g' deployment.yaml
                        git add .
                        git commit -m 'Update deployment Image to version 14'
                        git push https://aswanimamidi:${GIT_TOKEN}@github.com/aswanimamidi/3-tier-project.git HEAD:main
                    '''
                }
            }
        }
    }
}
}
         
